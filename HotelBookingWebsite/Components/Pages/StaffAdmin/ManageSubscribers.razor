@page "/staff-admin/manage-subscribers"
@using HotelBookingWebsite.Data.Entities
@using Microsoft.AspNetCore.Components.QuickGrid

@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject ISubscriberService SubscriberService

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center">
        <h1>
            Quản lý thành viên
        </h1>

    </div>
    <hr />
    <div class="table-responsive">
        <QuickGrid ItemsProvider="_subscriberProvider" @ref="_subscriberGrid" Pagination="_paginationState" Class="table table-striped">
            <PropertyColumn Property="b => b.Id" />
            <PropertyColumn Property="b => b.Email" />
            <PropertyColumn Property="b => b.SubscribeOn" Title="Subscribe On" Format="dd-MMM-yyyy hh:mm:ss" />
        </QuickGrid>
    </div>
    <Paginator State="_paginationState" />
</div>

@if (_isLoading)
{
    <Loader LoadingText="Đang tải" />
}


@code {
    private bool _isLoading;
    private GridItemsProvider<Subscriber>? _subscriberProvider;
    private QuickGrid<Subscriber> _subscriberGrid;
    private PaginationState _paginationState = new PaginationState { ItemsPerPage = PageSize };

    private const int PageSize = 10;


    protected override void OnInitialized()
    {
        _subscriberProvider = async (GridItemsProviderRequest<Subscriber> request) =>
        {
            _isLoading = true;
            StateHasChanged();

            //fetch booking from db
            var result = await SubscriberService.GetSubscribeAsync(request.StartIndex, request.Count ?? PageSize);
            _isLoading = false;
            StateHasChanged();

            return GridItemsProviderResult.From<Subscriber>(result.Records, result.totalCount);
        };
    }


}
