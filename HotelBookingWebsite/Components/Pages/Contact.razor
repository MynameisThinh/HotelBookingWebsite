@page "/contact"
@using System.Security.Claims
@using Microsoft.Extensions.Options

@inject IOptions<ContactInfoOption> ContactInfoOptions
@layout InnerPageLayout
@inject IEnquiryService EnquiryService
@attribute [StreamRendering]

<Microsoft.AspNetCore.Components.Sections.SectionContent SectionName="PageName">
    Liên hệ
</Microsoft.AspNetCore.Components.Sections.SectionContent>

<div class="container-xxl py-5">
    <div class="container">
        <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
            <h6 class="section-title text-center text-primary text-uppercase">Liên hệ chúng tôi</h6>
            <h1 class="mb-5"><span class="text-primary text-uppercase">Liên hệ</span> Thông qua các hình thức khác nhau</h1>
        </div>
        <div class="row g-4">
            <div class="col-12">
                <div class="row gy-4">
                    <div class="col-md-4">
                        <h6 class="section-title text-start text-primary text-uppercase">Booking</h6>
                        <p><i class="fa fa-envelope-open text-primary me-2"></i>@_contactOptions.BookingEmail</p>
                    </div>
                    <div class="col-md-4">
                        <h6 class="section-title text-start text-primary text-uppercase">General</h6>
                        <p><i class="fa fa-envelope-open text-primary me-2"></i>@_contactOptions.GeneralEmail</p>
                    </div>
                    <div class="col-md-4">
                        <h6 class="section-title text-start text-primary text-uppercase">Technical</h6>
                        <p><i class="fa fa-envelope-open text-primary me-2"></i>@_contactOptions.TechnicalEmail</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6 wow fadeIn" data-wow-delay="0.1s">
                <iframe class="position-relative rounded w-100 h-100"
                        src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3001156.4288297426!2d-78.01371936852176!3d42.72876761954724!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4ccc4bf0f123a5a9%3A0xddcfc6c1de189567!2sNew%20York%2C%20USA!5e0!3m2!1sen!2sbd!4v1603794290143!5m2!1sen!2sbd"
                        frameborder="0" style="min-height: 350px; border:0;" allowfullscreen="" aria-hidden="false"
                        tabindex="0"></iframe>
            </div>
            <div class="col-md-6">
                <div class="wow fadeInUp" data-wow-delay="0.2s">

                   
                    <EditForm Model="Model" Enhance FormName="enquiry-form" OnValidSubmit="SendMessageAsync">

                            <DataAnnotationsValidator />
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                   
                                    <InputText @bind-Value="Model.Name" class="form-control" placeholder="Tên của bạn" />
                                    <label for="name">Tên của bạn</label>
                                </div>
                                <ValidationMessage For="() => Model.Name" class="text-danger" />
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText type="email" @bind-Value="Model.Email" class="form-control" id="email" placeholder="Email của bạn" />
                                    <label for="email">Email của bạn</label>
                                </div>
                                <ValidationMessage For="() => Model.Email" class="text-danger" />
                            </div>
                            <div class="col-12">
                                <div class="form-floating">
                                    <InputText @bind-Value="Model.Subject" class="form-control" id="subject" placeholder="Chủ đề" />
                                    <label for="subject">Chủ đề</label>
                                </div>
                                <ValidationMessage For="() => Model.Subject" class="text-danger" />
                            </div>
                            <div class="col-12">
                                <div class="form-floating">
                                    <InputTextArea @bind-Value="Model.Message" class="form-control" placeholder="Để lại lời nhắn" id="message" style="height: 150px"></InputTextArea>
                                    <label for="message">Lời nhắn</label>
                                </div>
                                <ValidationMessage For="() => Model.Message" class="text-danger" />
                            </div>
                            <div class="col-12">
                                @if (!string.IsNullOrWhiteSpace(_message))
                                {
                                    <p class="text-success">
                                        @_message
                                    </p>
                                    <hr />
                                }
                                @if (!string.IsNullOrWhiteSpace(_error))
                                {
                                    <p class="text-danger fw-bold my-3">
                                        @_error
                                    </p>
                                    <hr />
                                }
                            </div>
                            <div class="col-12">
                                <button class="btn btn-primary w-100 py-3" type="submit" disabled="@_isProcessing">
                                    @(_isProcessing ? "Đang tải" :"Gửi tin nhắn") </button>
                            </div>

                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm(FormName = "enquiry-form")]
    public EnquiryModel Model { get; set; } = new();

    [CascadingParameter]
    public HttpContext httpContext { get; set; }
    private bool _isProcessing;
    private string? _error;
    private string? _message;

    private ContactInfoOption _contactOptions = new();

    protected override void OnInitialized()
    {
        _contactOptions = ContactInfoOptions.Value;
        if (HttpMethods.IsGet(httpContext.Request.Method))
        {
            if(httpContext.User?.Identity?.IsAuthenticated == true)
            {
                Model.Name =  httpContext.User.FindFirstValue(AppConstants.CustomClaimTypes.FullName)!;
                Model.Email = httpContext.User.FindFirstValue(AppConstants.CustomClaimTypes.Email)!;
            }
        }
    }
    private async Task SendMessageAsync()
    {
        _error = _message = null;
        _isProcessing = true;

        var result = await EnquiryService.AddEnquiryAsync(Model);
        if (!result.IsSuccess)
        {
            _error = result.ErrorMessage ?? "Lỗi khi gửi biểu mẫu";
        }
        else
        {
            _message = "Biểu mẫu gửi thành công";
        }
        Model = new();
        _isProcessing = false;
    }
}
