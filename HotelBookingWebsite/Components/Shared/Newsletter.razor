@using System.ComponentModel.DataAnnotations
@inject ISubscriberService SubscriberService
@attribute [StreamRendering]
<!-- Newsletter Start -->
<div class="container newsletter mt-5 wow fadeIn" data-wow-delay="0.1s">
    <div class="row justify-content-center">
        <div class="col-lg-10 border rounded p-1">
            <div class="border rounded text-center p-1">
                <div class="bg-white rounded text-center p-5">
                    <h4 class="mb-4">Subscribe Our <span class="text-primary text-uppercase">Newsletter</span></h4>
                    <EditForm Model="Model" Enhance FormName="subscribe-form" OnValidSubmit="SubscribeAsync">
                        <div class="position-relative mx-auto" style="max-width: 400px;">
                            <InputText @bind-Value="Model.Email" class="form-control w-100 py-3 ps-4 pe-5" type="email" placeholder="Nhập email" />
                            <ValidationMessage For="() => Model.Email" class="text-danger" />
                                @if (!string.IsNullOrWhiteSpace(_message))
                                {
                                    <p class="text-success">
                                        @_message
                                    </p>
                                    <hr />
                                }
                                @if (!string.IsNullOrWhiteSpace(_error))
                                {
                                    <p class="text-danger fw-bold my-3">
                                        @_error
                                    </p>
                                    <hr />
                                }
                            <button type="submit" class="btn btn-primary py-2 px-3 position-absolute top-0 end-0 mt-2 me-2" disabled="@_isProcessing">
                                @(_isProcessing ?"Đang tải.." : "Đăng ký")
                                </button>
                        </div>
                    </EditForm>
                   
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Newsletter Start -->

@code {
    [SupplyParameterFromForm(FormName = "subscribe-form")]
    private SubscribeModel Model { get; set; } = new();
    private string? _error;
    private string? _message;
    private bool _isProcessing;

    private async Task SubscribeAsync()
    {
        _error = _message = null;
        _isProcessing = true;

        var result = await SubscriberService.AddSubscribeAsync(Model.Email);
        if (!result.IsSuccess)
        {
            _error = result.ErrorMessage ?? "Lỗi khi đăng ký thành viên";
        }
        else
        {
            _message = "Đăng ký thành công";
        }
        Model = new();
        _isProcessing = false;
    }

    private class SubscribeModel
    {
        [Required, MaxLength(50),EmailAddress,DataType(DataType.EmailAddress)]
        public string Email { get; set; }
    }


}
